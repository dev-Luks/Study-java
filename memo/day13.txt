오늘 복습할것: thread coding(ThreadTask) , lamda(collection 공부) ,thread(exitTest)

동기화(Synchronized)
	하나의 쓰레드가 자원에 접근 중일 때 다른 쓰레드가 동시에 같은 자원을 접근하지 못하게 막는 것.
	즉, 자원 공유 문제를 해결할 수 있다.
	각 쓰레드를 제어해야 할 때에도 자주 사용된다.	// 완성을 시키기 위해 사용함. 
	//쓰레드가 멈춰 있을때 종료하는게 좋음.

동기화 문법 
	- 블럭:  synchronized(mutex) {...}   -> 자원이 있는 객체 (this)  art shift z -> synchronized

	- 키워드 : synchronized   ex) synchronized void withdraw   
		영역 전체에 동기화를 걸어주며, 메소드 리턴 타입 앞에 작성하면
		해당 메소드 전체에 동기화가 걸린다.

	boolean을 if문
	sleep, join,wait, notify
	프로세스 종료

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
코딩 테스트
- 멀티 쓰레드 문제(배열, 람다식)
- 알고리즘 문제(문제 해결 능력(경험자의 코드를 많이 보자, API문서), Stream API)

Git
   - git-bash : 로컬, 서버 연결 후 서버도 관리 가능
   - git-hub : 서버 관리
   - add, commit, push, pull, clone

쓰레드
   - 동기화(자원 공유 문제 해결)
      1. 모든 연산을 정확히 해야 할 때
      2. 직접 각 쓰레드를 제어할 때

   - 종료
      1. boolean 필드 선언
      2. sleep(), join(), wait()에서 IntrruptedException 발생
      3. System.exit(0); 프로세스 종료